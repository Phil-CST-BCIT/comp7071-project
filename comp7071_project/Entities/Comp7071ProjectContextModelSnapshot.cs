// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using comp7071_project.Models;

#nullable disable

namespace comp7071_project.Entities
{
    [DbContext(typeof(Comp7071ProjectContext))]
    partial class Comp7071ProjectContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Service");
                });

            modelBuilder.Entity("comp7071_project.Models.Appliance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssetId")
                        .HasColumnType("int");

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.ToTable("Appliance");
                });

            modelBuilder.Entity("comp7071_project.Models.ApplianceDim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Make")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ApplianceDim");
                });

            modelBuilder.Entity("comp7071_project.Models.Applicant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Employer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Income")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Applicant");
                });

            modelBuilder.Entity("comp7071_project.Models.Application", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ApplicantId")
                        .HasColumnType("int");

                    b.Property<int>("AssetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantId")
                        .IsUnique();

                    b.HasIndex("AssetId");

                    b.ToTable("Application");
                });

            modelBuilder.Entity("comp7071_project.Models.Asset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RenterId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RenterId");

                    b.ToTable("Asset", t =>
                        {
                            t.HasTrigger("AfterApplianceINSERT");

                            t.HasTrigger("AfterAssetINSERT");

                            t.HasTrigger("AfterInvoiceINSERT");

                            t.HasTrigger("AfterMaintenanceRequestINSERT");

                            t.HasTrigger("AfterRenterINSERT");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("comp7071_project.Models.AssetDim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AssetDim");
                });

            modelBuilder.Entity("comp7071_project.Models.Damage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssetId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("DateReported")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.ToTable("Damage");
                });

            modelBuilder.Entity("comp7071_project.Models.DateDim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("DueDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("DateDim");
                });

            modelBuilder.Entity("comp7071_project.Models.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("DueDate")
                        .HasColumnType("date");

                    b.Property<double>("PaymentAmount")
                        .HasColumnType("float");

                    b.Property<int>("RenterID")
                        .HasColumnType("int");

                    b.Property<double>("Tax")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("RenterID");

                    b.ToTable("Invoice");
                });

            modelBuilder.Entity("comp7071_project.Models.InvoiceFact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<int?>("ApplianceDimId")
                        .HasColumnType("int");

                    b.Property<int?>("AssetDimId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerDimId")
                        .HasColumnType("int");

                    b.Property<int?>("DateDimId")
                        .HasColumnType("int");

                    b.Property<int?>("MaintenanceRequestDimId")
                        .HasColumnType("int");

                    b.Property<int?>("RentHistoryDimId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplianceDimId");

                    b.HasIndex("AssetDimId");

                    b.HasIndex("CustomerDimId");

                    b.HasIndex("DateDimId");

                    b.HasIndex("MaintenanceRequestDimId");

                    b.HasIndex("RentHistoryDimId");

                    b.ToTable("InvoiceFact");
                });

            modelBuilder.Entity("comp7071_project.Models.JobReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("DateCompleted")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaintenanceRequestId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MaintenanceRequestId");

                    b.ToTable("JobReport");
                });

            modelBuilder.Entity("comp7071_project.Models.LineItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Hours")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("ServiceId");

                    b.ToTable("LineItem");
                });

            modelBuilder.Entity("comp7071_project.Models.MaintenanceRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ApplianceId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RenterId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplianceId");

                    b.HasIndex("RenterId");

                    b.ToTable("MaintenanceRequest");
                });

            modelBuilder.Entity("comp7071_project.Models.MaintenanceRequestDim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("DateCompleted")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("DateRequested")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MaintenanceRequestDim");
                });

            modelBuilder.Entity("comp7071_project.Models.OccupancyHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssetId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("LicensePlate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.ToTable("OccupancyHistory");
                });

            modelBuilder.Entity("comp7071_project.Models.Reference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ApplicantId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Relationship")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantId")
                        .IsUnique();

                    b.ToTable("Reference");
                });

            modelBuilder.Entity("comp7071_project.Models.RentHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("AssetId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("EffectiveDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.ToTable("RentHistory");
                });

            modelBuilder.Entity("comp7071_project.Models.RentHistoryDim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Amount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("RentHistoryDim");
                });

            modelBuilder.Entity("comp7071_project.Models.Renter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EmergencyContactEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FamilyDoctorEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Income")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Renter");
                });

            modelBuilder.Entity("comp7071_project.Models.RenterDim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("Income")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RenterDim");
                });

            modelBuilder.Entity("comp7071_project.Models.Appliance", b =>
                {
                    b.HasOne("comp7071_project.Models.Asset", "Asset")
                        .WithMany("Appliances")
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asset");
                });

            modelBuilder.Entity("comp7071_project.Models.Application", b =>
                {
                    b.HasOne("comp7071_project.Models.Applicant", "Applicant")
                        .WithOne("Application")
                        .HasForeignKey("comp7071_project.Models.Application", "ApplicantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("comp7071_project.Models.Asset", "Asset")
                        .WithMany()
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Applicant");

                    b.Navigation("Asset");
                });

            modelBuilder.Entity("comp7071_project.Models.Asset", b =>
                {
                    b.HasOne("comp7071_project.Models.Renter", "Renter")
                        .WithMany("Assets")
                        .HasForeignKey("RenterId");

                    b.Navigation("Renter");
                });

            modelBuilder.Entity("comp7071_project.Models.Damage", b =>
                {
                    b.HasOne("comp7071_project.Models.Asset", "Asset")
                        .WithMany("Damages")
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asset");
                });

            modelBuilder.Entity("comp7071_project.Models.Invoice", b =>
                {
                    b.HasOne("comp7071_project.Models.Renter", "Renter")
                        .WithMany()
                        .HasForeignKey("RenterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Renter");
                });

            modelBuilder.Entity("comp7071_project.Models.InvoiceFact", b =>
                {
                    b.HasOne("comp7071_project.Models.ApplianceDim", "ApplianceDim")
                        .WithMany()
                        .HasForeignKey("ApplianceDimId");

                    b.HasOne("comp7071_project.Models.AssetDim", "AssetDim")
                        .WithMany()
                        .HasForeignKey("AssetDimId");

                    b.HasOne("comp7071_project.Models.RenterDim", "RenterDim")
                        .WithMany()
                        .HasForeignKey("CustomerDimId");

                    b.HasOne("comp7071_project.Models.DateDim", "DateDim")
                        .WithMany()
                        .HasForeignKey("DateDimId");

                    b.HasOne("comp7071_project.Models.MaintenanceRequestDim", "MaintenanceRequestDim")
                        .WithMany()
                        .HasForeignKey("MaintenanceRequestDimId");

                    b.HasOne("comp7071_project.Models.RentHistoryDim", "RentHistoryDim")
                        .WithMany()
                        .HasForeignKey("RentHistoryDimId");

                    b.Navigation("ApplianceDim");

                    b.Navigation("AssetDim");

                    b.Navigation("RenterDim");

                    b.Navigation("DateDim");

                    b.Navigation("MaintenanceRequestDim");

                    b.Navigation("RentHistoryDim");
                });

            modelBuilder.Entity("comp7071_project.Models.JobReport", b =>
                {
                    b.HasOne("comp7071_project.Models.MaintenanceRequest", "MaintenanceRequest")
                        .WithMany("JobReports")
                        .HasForeignKey("MaintenanceRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MaintenanceRequest");
                });

            modelBuilder.Entity("comp7071_project.Models.LineItem", b =>
                {
                    b.HasOne("comp7071_project.Models.Invoice", null)
                        .WithMany("LineItems")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Service", null)
                        .WithMany("LineItems")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("comp7071_project.Models.MaintenanceRequest", b =>
                {
                    b.HasOne("comp7071_project.Models.Appliance", "Appliance")
                        .WithMany()
                        .HasForeignKey("ApplianceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("comp7071_project.Models.Renter", "Renter")
                        .WithMany("MaintenanceRequests")
                        .HasForeignKey("RenterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Appliance");

                    b.Navigation("Renter");
                });

            modelBuilder.Entity("comp7071_project.Models.OccupancyHistory", b =>
                {
                    b.HasOne("comp7071_project.Models.Asset", "Asset")
                        .WithMany("OccupancyHistories")
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asset");
                });

            modelBuilder.Entity("comp7071_project.Models.Reference", b =>
                {
                    b.HasOne("comp7071_project.Models.Applicant", null)
                        .WithOne("Reference")
                        .HasForeignKey("comp7071_project.Models.Reference", "ApplicantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("comp7071_project.Models.RentHistory", b =>
                {
                    b.HasOne("comp7071_project.Models.Asset", "Asset")
                        .WithMany("RentHistories")
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asset");
                });

            modelBuilder.Entity("Service", b =>
                {
                    b.Navigation("LineItems");
                });

            modelBuilder.Entity("comp7071_project.Models.Applicant", b =>
                {
                    b.Navigation("Application");

                    b.Navigation("Reference");
                });

            modelBuilder.Entity("comp7071_project.Models.Asset", b =>
                {
                    b.Navigation("Appliances");

                    b.Navigation("Damages");

                    b.Navigation("OccupancyHistories");

                    b.Navigation("RentHistories");
                });

            modelBuilder.Entity("comp7071_project.Models.Invoice", b =>
                {
                    b.Navigation("LineItems");
                });

            modelBuilder.Entity("comp7071_project.Models.MaintenanceRequest", b =>
                {
                    b.Navigation("JobReports");
                });

            modelBuilder.Entity("comp7071_project.Models.Renter", b =>
                {
                    b.Navigation("Assets");

                    b.Navigation("MaintenanceRequests");
                });
#pragma warning restore 612, 618
        }
    }
}
