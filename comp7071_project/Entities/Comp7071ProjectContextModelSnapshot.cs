// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using comp7071_project.Models;

#nullable disable

namespace comp7071_project.Entities
{
    [DbContext(typeof(Comp7071ProjectContext))]
    partial class Comp7071ProjectContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("comp7071_project.Models.Appliance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssetId")
                        .HasColumnType("int")
                        .HasColumnName("Asset_id");

                    b.Property<string>("Make")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Model")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_APPLIANCE");

                    b.HasIndex("AssetId");

                    b.ToTable("Appliance", (string)null);
                });

            modelBuilder.Entity("comp7071_project.Models.ApplianceDim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Make")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ApplianceDims");
                });

            modelBuilder.Entity("comp7071_project.Models.Applicant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Employer")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("Income")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("ReferenceId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_APPLICANT");

                    b.HasIndex("ReferenceId");

                    b.ToTable("Applicant", (string)null);
                });

            modelBuilder.Entity("comp7071_project.Models.Application", b =>
                {
                    b.Property<int>("ApplicantId")
                        .HasColumnType("int")
                        .HasColumnName("Applicant_id");

                    b.Property<int>("AssetId")
                        .HasColumnType("int")
                        .HasColumnName("Asset_id");

                    b.HasKey("ApplicantId", "AssetId")
                        .HasName("PK_APPLICATION");

                    b.HasIndex(new[] { "AssetId" }, "UQ__Applicat__991A54CF0F6814E5")
                        .IsUnique();

                    b.HasIndex(new[] { "ApplicantId" }, "UQ__Applicat__9F9A133EB34FD41E")
                        .IsUnique();

                    b.ToTable("Application", (string)null);
                });

            modelBuilder.Entity("comp7071_project.Models.Asset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Location")
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("varchar(70)");

                    b.Property<string>("Status")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Type")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id")
                        .HasName("PK_ASSET");

                    b.ToTable("Asset", (string)null);
                });

            modelBuilder.Entity("comp7071_project.Models.AssetDim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AssetDims");
                });

            modelBuilder.Entity("comp7071_project.Models.CustomerDim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Employer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CustomerDims");
                });

            modelBuilder.Entity("comp7071_project.Models.Damage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssetId")
                        .HasColumnType("int")
                        .HasColumnName("Asset_id");

                    b.Property<DateOnly?>("DateReported")
                        .HasColumnType("date")
                        .HasColumnName("Date_reported");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id")
                        .HasName("PK_DAMAGE");

                    b.HasIndex("AssetId");

                    b.ToTable("Damage", (string)null);
                });

            modelBuilder.Entity("comp7071_project.Models.DateDim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("DateDims");
                });

            modelBuilder.Entity("comp7071_project.Models.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("DueDate")
                        .HasColumnType("date")
                        .HasColumnName("Due_date");

                    b.Property<double?>("RentAmount")
                        .HasColumnType("float")
                        .HasColumnName("Rent_amount");

                    b.Property<int>("RenterId")
                        .HasColumnType("int");

                    b.Property<double?>("Tax")
                        .HasColumnType("float");

                    b.HasKey("Id")
                        .HasName("PK_INVOICE");

                    b.HasIndex("RenterId");

                    b.ToTable("Invoice", (string)null);
                });

            modelBuilder.Entity("comp7071_project.Models.JobReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("DateCompleted")
                        .HasColumnType("date")
                        .HasColumnName("Date_completed");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("MaintenanceRequestId")
                        .HasColumnType("int")
                        .HasColumnName("Maintenance_request_id");

                    b.HasKey("Id")
                        .HasName("PK_JOB_REPORT");

                    b.HasIndex("MaintenanceRequestId");

                    b.ToTable("Job_report", (string)null);
                });

            modelBuilder.Entity("comp7071_project.Models.LineItem", b =>
                {
                    b.Property<int>("ServiceId")
                        .HasColumnType("int")
                        .HasColumnName("Service_id");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int")
                        .HasColumnName("Invoice_id");

                    b.Property<int?>("Hours")
                        .HasColumnType("int");

                    b.HasKey("ServiceId", "InvoiceId")
                        .HasName("PK_LINE_ITEM");

                    b.HasIndex("InvoiceId");

                    b.ToTable("Line_item", (string)null);
                });

            modelBuilder.Entity("comp7071_project.Models.MaintenanceRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ApplianceId")
                        .HasColumnType("int")
                        .HasColumnName("Appliance_id");

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("RenterId")
                        .HasColumnType("int")
                        .HasColumnName("Renter_id");

                    b.HasKey("Id")
                        .HasName("PK_MAINTENANCE_REQUEST");

                    b.HasIndex("ApplianceId");

                    b.HasIndex("RenterId");

                    b.ToTable("Maintenance_request", (string)null);
                });

            modelBuilder.Entity("comp7071_project.Models.MaintenanceRequestDim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("DateCompleted")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("DateRequested")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MaintenanceRequestDims");
                });

            modelBuilder.Entity("comp7071_project.Models.OccupancyHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssetId")
                        .HasColumnType("int")
                        .HasColumnName("Asset_id");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("End_date");

                    b.Property<string>("LicensePlate")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("License_plate");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("Start_date");

                    b.HasKey("Id")
                        .HasName("PK_OCCUPANCY_HISTORY");

                    b.HasIndex("AssetId");

                    b.ToTable("Occupancy_history", (string)null);
                });

            modelBuilder.Entity("comp7071_project.Models.Reference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Relationship")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.HasKey("Id")
                        .HasName("PK_REFERENCE");

                    b.ToTable("Reference", (string)null);
                });

            modelBuilder.Entity("comp7071_project.Models.RentFact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<int?>("ApplianceDimId")
                        .HasColumnType("int");

                    b.Property<int?>("AssetDimId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerDimId")
                        .HasColumnType("int");

                    b.Property<int?>("DateDimId")
                        .HasColumnType("int");

                    b.Property<int?>("MaintenanceRequestDimId")
                        .HasColumnType("int");

                    b.Property<int?>("RentHistoryDimId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplianceDimId");

                    b.HasIndex("AssetDimId");

                    b.HasIndex("CustomerDimId");

                    b.HasIndex("DateDimId");

                    b.HasIndex("MaintenanceRequestDimId");

                    b.HasIndex("RentHistoryDimId");

                    b.ToTable("RentFacts");
                });

            modelBuilder.Entity("comp7071_project.Models.RentHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("AssetId")
                        .HasColumnType("int")
                        .HasColumnName("Asset_id");

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date");

                    b.HasKey("Id")
                        .HasName("PK_RENT_HISTORY");

                    b.HasIndex("AssetId");

                    b.ToTable("Rent_history", (string)null);
                });

            modelBuilder.Entity("comp7071_project.Models.RentHistoryDim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Amount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("RentHistoryDims");
                });

            modelBuilder.Entity("comp7071_project.Models.Renter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EmergencyContactEmail")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("Emergency_contact_email");

                    b.Property<string>("FamilyDoctorEmail")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("Family_doctor_email");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_RENTER");

                    b.ToTable("Renter", (string)null);
                });

            modelBuilder.Entity("comp7071_project.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("Rate")
                        .HasColumnType("float");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_SERVICE");

                    b.ToTable("Service", (string)null);
                });

            modelBuilder.Entity("comp7071_project.Models.WorkItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MaintenanceRequestId")
                        .HasColumnType("int")
                        .HasColumnName("Maintenance_request_id");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_WORK_ITEM");

                    b.HasIndex("MaintenanceRequestId");

                    b.ToTable("Work_item", (string)null);
                });

            modelBuilder.Entity("comp7071_project.Models.Appliance", b =>
                {
                    b.HasOne("comp7071_project.Models.Asset", "Asset")
                        .WithMany("Appliances")
                        .HasForeignKey("AssetId")
                        .IsRequired()
                        .HasConstraintName("FK_ASSET_APPLIANCE");

                    b.Navigation("Asset");
                });

            modelBuilder.Entity("comp7071_project.Models.Applicant", b =>
                {
                    b.HasOne("comp7071_project.Models.Reference", "Reference")
                        .WithMany()
                        .HasForeignKey("ReferenceId");

                    b.Navigation("Reference");
                });

            modelBuilder.Entity("comp7071_project.Models.Application", b =>
                {
                    b.HasOne("comp7071_project.Models.Applicant", "Applicant")
                        .WithOne("Application")
                        .HasForeignKey("comp7071_project.Models.Application", "ApplicantId")
                        .IsRequired()
                        .HasConstraintName("FK_APPLICANT_APPLICATION");

                    b.HasOne("comp7071_project.Models.Asset", "Asset")
                        .WithOne("Application")
                        .HasForeignKey("comp7071_project.Models.Application", "AssetId")
                        .IsRequired()
                        .HasConstraintName("FK_ASSET_APPLICATION");

                    b.Navigation("Applicant");

                    b.Navigation("Asset");
                });

            modelBuilder.Entity("comp7071_project.Models.Damage", b =>
                {
                    b.HasOne("comp7071_project.Models.Asset", "Asset")
                        .WithMany("Damages")
                        .HasForeignKey("AssetId")
                        .IsRequired()
                        .HasConstraintName("FK_ASSET_DAMAGE");

                    b.Navigation("Asset");
                });

            modelBuilder.Entity("comp7071_project.Models.Invoice", b =>
                {
                    b.HasOne("comp7071_project.Models.Renter", "Renter")
                        .WithMany()
                        .HasForeignKey("RenterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Renter");
                });

            modelBuilder.Entity("comp7071_project.Models.JobReport", b =>
                {
                    b.HasOne("comp7071_project.Models.MaintenanceRequest", "MaintenanceRequest")
                        .WithMany("JobReports")
                        .HasForeignKey("MaintenanceRequestId")
                        .IsRequired()
                        .HasConstraintName("FK_MAINTENANCE_REQUEST_JOB_REPORT");

                    b.Navigation("MaintenanceRequest");
                });

            modelBuilder.Entity("comp7071_project.Models.LineItem", b =>
                {
                    b.HasOne("comp7071_project.Models.Invoice", "Invoice")
                        .WithMany("LineItems")
                        .HasForeignKey("InvoiceId")
                        .IsRequired()
                        .HasConstraintName("FK_INVOICE_LINE_ITEM");

                    b.HasOne("comp7071_project.Models.Service", "Service")
                        .WithMany("LineItems")
                        .HasForeignKey("ServiceId")
                        .IsRequired()
                        .HasConstraintName("FK_SERVICE_LINE_ITEM");

                    b.Navigation("Invoice");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("comp7071_project.Models.MaintenanceRequest", b =>
                {
                    b.HasOne("comp7071_project.Models.Appliance", "Appliance")
                        .WithMany("MaintenanceRequests")
                        .HasForeignKey("ApplianceId")
                        .HasConstraintName("FK_APPLIANCE_MAINTENANCE_REQUEST");

                    b.HasOne("comp7071_project.Models.Renter", "Renter")
                        .WithMany("MaintenanceRequests")
                        .HasForeignKey("RenterId")
                        .IsRequired()
                        .HasConstraintName("FK_RENTER_MAINTENANCE_REQUEST");

                    b.Navigation("Appliance");

                    b.Navigation("Renter");
                });

            modelBuilder.Entity("comp7071_project.Models.OccupancyHistory", b =>
                {
                    b.HasOne("comp7071_project.Models.Asset", "Asset")
                        .WithMany("OccupancyHistories")
                        .HasForeignKey("AssetId")
                        .IsRequired()
                        .HasConstraintName("FK_ASSET_OCCUPANCY_HISTORY");

                    b.Navigation("Asset");
                });

            modelBuilder.Entity("comp7071_project.Models.RentFact", b =>
                {
                    b.HasOne("comp7071_project.Models.ApplianceDim", "ApplianceDim")
                        .WithMany()
                        .HasForeignKey("ApplianceDimId");

                    b.HasOne("comp7071_project.Models.AssetDim", "AssetDim")
                        .WithMany()
                        .HasForeignKey("AssetDimId");

                    b.HasOne("comp7071_project.Models.CustomerDim", "CustomerDim")
                        .WithMany()
                        .HasForeignKey("CustomerDimId");

                    b.HasOne("comp7071_project.Models.DateDim", "DateDim")
                        .WithMany()
                        .HasForeignKey("DateDimId");

                    b.HasOne("comp7071_project.Models.MaintenanceRequestDim", "MaintenanceRequestDim")
                        .WithMany()
                        .HasForeignKey("MaintenanceRequestDimId");

                    b.HasOne("comp7071_project.Models.RentHistoryDim", "RentHistoryDim")
                        .WithMany()
                        .HasForeignKey("RentHistoryDimId");

                    b.Navigation("ApplianceDim");

                    b.Navigation("AssetDim");

                    b.Navigation("CustomerDim");

                    b.Navigation("DateDim");

                    b.Navigation("MaintenanceRequestDim");

                    b.Navigation("RentHistoryDim");
                });

            modelBuilder.Entity("comp7071_project.Models.RentHistory", b =>
                {
                    b.HasOne("comp7071_project.Models.Asset", "Asset")
                        .WithMany("RentHistories")
                        .HasForeignKey("AssetId")
                        .IsRequired()
                        .HasConstraintName("PK_ASSET_RENT_HISTORY");

                    b.Navigation("Asset");
                });

            modelBuilder.Entity("comp7071_project.Models.WorkItem", b =>
                {
                    b.HasOne("comp7071_project.Models.MaintenanceRequest", "MaintenanceRequest")
                        .WithMany("WorkItems")
                        .HasForeignKey("MaintenanceRequestId")
                        .IsRequired()
                        .HasConstraintName("FK_MAINTENANCE_REQUEST_WORK_ITEM");

                    b.Navigation("MaintenanceRequest");
                });

            modelBuilder.Entity("comp7071_project.Models.Appliance", b =>
                {
                    b.Navigation("MaintenanceRequests");
                });

            modelBuilder.Entity("comp7071_project.Models.Applicant", b =>
                {
                    b.Navigation("Application");
                });

            modelBuilder.Entity("comp7071_project.Models.Asset", b =>
                {
                    b.Navigation("Appliances");

                    b.Navigation("Application");

                    b.Navigation("Damages");

                    b.Navigation("OccupancyHistories");

                    b.Navigation("RentHistories");
                });

            modelBuilder.Entity("comp7071_project.Models.Invoice", b =>
                {
                    b.Navigation("LineItems");
                });

            modelBuilder.Entity("comp7071_project.Models.MaintenanceRequest", b =>
                {
                    b.Navigation("JobReports");

                    b.Navigation("WorkItems");
                });

            modelBuilder.Entity("comp7071_project.Models.Renter", b =>
                {
                    b.Navigation("MaintenanceRequests");
                });

            modelBuilder.Entity("comp7071_project.Models.Service", b =>
                {
                    b.Navigation("LineItems");
                });
#pragma warning restore 612, 618
        }
    }
}
